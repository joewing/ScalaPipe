package scalapipe

private[scalapipe] object NodeType extends Enumeration {
    val invalid     = Value("invalid")
    val special     = Value("special")
    val literal     = Value("literal")
    val symbol      = Value("symbol")
    val call        = Value("call")
    val convert     = Value("convert")
    val IF          = Value("IF")
    val WHILE       = Value("WHILE")
    val SWITCH      = Value("SWITCH")
    val CALL        = Value("CALL")
    val STOP        = Value("STOP")
    val BLOCK       = Value("BLOCK")
    val RETURN      = Value("RETURN")
    val avail       = Value("avail")
    val addr        = Value("addr")
    val sizeof      = Value("sizeof")
    val assign      = Value(":=")
    val neg         = Value("unary_-")
    val not         = Value("!")
    val compl       = Value("~")
    val land        = Value("&&")
    val lor         = Value("||")
    val and         = Value("&")
    val or          = Value("|")
    val xor         = Value("^")
    val shr         = Value(">>")
    val shl         = Value("<<")
    val add         = Value("+")
    val sub         = Value("-")
    val mul         = Value("*")
    val div         = Value("/")
    val mod         = Value("%")
    val eq          = Value("==")
    val ne          = Value("<>")
    val gt          = Value(">")
    val lt          = Value("<")
    val ge          = Value(">=")
    val le          = Value("<=")
    val abs         = Value("abs")
    val sqrt        = Value("sqrt")
    val exp         = Value("exp")
    val log         = Value("log")
    val sin         = Value("sin")
    val cos         = Value("cos")
    val tan         = Value("tan")
}
